{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranjan\\\\Desktop\\\\quizbee\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/style.css\";\nimport quizService from \"./quizService\";\nimport QuestionBox from \"./components/QuestionBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuizBee extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {}\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"QuizBee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), this.state.questionBank.length > 0 && this.state.questionBank.map(({\n        question,\n        answers,\n        correct,\n        questionId\n      }) => /*#__PURE__*/_jsxDEV(QuestionBox, {\n        question: question,\n        options: answers,\n        selected: answer => this.computeAnswer(answer, correct)\n      }, questionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(QuizBee, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/ranjan/Desktop/quizbee/src/index.js"],"names":["React","Component","ReactDOM","quizService","QuestionBox","QuizBee","state","questionBank","score","getQuestions","then","question","setState","computeAnswer","answer","correctAnswer","componentDidMount","render","length","map","answers","correct","questionId","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AACA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADoB;;AAAA,SAK5BC,YAL4B,GAKb,MAAM;AACjBN,MAAAA,WAAW,GAAGO,IAAd,CAAmBC,QAAQ,IAAG;AAC1B,aAAKC,QAAL,CAAc;AACVL,UAAAA,YAAY,EAAEI;AADJ,SAAd;AAGH,OAJD;AAKH,KAX2B;;AAAA,SAa5BE,aAb4B,GAaZ,CAACC,MAAD,EAASC,aAAT,KAA2B;AACvC,UAAID,MAAM,KAAKC,aAAf,EAA8B,CAE7B;AACJ,KAjB2B;AAAA;;AAkB5BC,EAAAA,iBAAiB,GAAE;AACf,SAAKP,YAAL;AACH;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEA,KAAKX,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,GAAiC,CAAjC,IACD,KAAKZ,KAAL,CAAWC,YAAX,CAAwBY,GAAxB,CACI,CAAC;AAACR,QAAAA,QAAD;AAAWS,QAAAA,OAAX;AAAoBC,QAAAA,OAApB;AAA6BC,QAAAA;AAA7B,OAAD,kBACI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEX,QAAvB;AAAiC,QAAA,OAAO,EAAES,OAA1C;AACA,QAAA,QAAQ,EAAEN,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BO,OAA3B;AADpB,SAAwDC,UAAxD;AAAA;AAAA;AAAA;AAAA,cAFR,CAHC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAnC2B;;AAsChCpB,QAAQ,CAACe,MAAT,eAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA6BM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["import React, {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/style.css\";\r\nimport quizService from \"./quizService\";\r\nimport QuestionBox from \"./components/QuestionBox\";\r\nclass QuizBee extends Component {\r\n    state = {\r\n        questionBank: [],\r\n        score: 0,\r\n        };\r\n    getQuestions = () => {\r\n        quizService().then(question =>{\r\n            this.setState({ \r\n                questionBank: question\r\n            });\r\n        });\r\n    };\r\n\r\n    computeAnswer = (answer, correctAnswer) => {\r\n        if (answer === correctAnswer) {\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getQuestions();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"title\">QuizBee</div>\r\n           {this.state.questionBank.length > 0 &&\r\n           this.state.questionBank.map(\r\n               ({question, answers, correct, questionId}) => (\r\n                   <QuestionBox question={question} options={answers} key={questionId}\r\n                   selected={answer => this.computeAnswer(answer, correct)} />\r\n               )\r\n           )};\r\n            </div>\r\n            );\r\n    }\r\n} \r\n\r\nReactDOM.render(<QuizBee />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}